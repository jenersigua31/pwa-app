{"version":3,"sources":["components/alma.jpg","components/360image.tsx","pages/360imageContainer.tsx","pages/interactive/components/video-player.tsx","pages/interactive/interactive.tsx","pages/sidebyside/side-by-side.tsx","pages/filter/images/chromance_off.png","pages/filter/images/chromance_on.png","pages/filter/images/polar_off.jpg","pages/filter/images/polar_on.png","pages/filter/images/lightblue_filter_off.jpg","pages/filter/images/lightblue_filter_on.jpg","pages/filter/images/evolve_off.jpg","pages/filter/images/evolve_on.mp4","pages/filter/Filter.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["ThreeSixtyImage","id","scene","hotspot","hotSpotDiv","args","tooltip","classList","add","span","document","createElement","innerHTML","message","appendChild","onClick","addEventListener","config","autoLoad","showZoomCtrl","showFullscreenCtrl","hotSpots","alert","style","width","window","innerWidth","height","innerHeight","background","hotSpotDebug","sceneId","imageSource","sphereImage","onPanoramaLoaded","console","log","ThreeSixtyImageContainer","className","VideoPlayer","source","currentTime","autoPlay","loop","onTimeUpdate","video","useRef","React","useEffect","current","play","onCanPlayThrough","playsInline","e","target","duration","ref","muted","src","type","Interactive","useState","videoType","setVideoType","finalWidth","setFinalWidth","getFinalWidth","toggleVideo","windowWidth","controlButtonClassName","def","SideBySide","slider","videoTime","setVideoTime","videoA","videoB","value","Number","data","String","onChange","event","min","max","Filter","filters","chromance","off","chromanceOff","on","chromanceOn","polarized","polarOff","polarOn","evolve","evolveOff","evolveOn","blueLightFilter","blueOff","blueOn","activeFilter","setActiveFilter","filterOpacity","setFilterOpacity","filterTimeout","setFilterTimeout","mouseEvent","opacity","timeout","setInterval","clearTimeout","onMouseUp","alt","onMouseDown","App","activeClassName","exact","to","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.4bf34889.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alma.690bd3af.jpg\";","import React from 'react';\nimport ReactPannellum, * as sphere from \"react-pannellum\";\nimport sphereImage from './alma.jpg';\n\n\ninterface Props {\n    id: string,\n    scene: string\n}\n\nconst ThreeSixtyImage : React.FC<Props>  = ({id, scene}) =>  {\n\n    const hotspot = (hotSpotDiv: any, args: any) =>{\n        if (args.tooltip) {\n            hotSpotDiv.classList.add('custom-tooltip');\n            var span = document.createElement('span');\n            span.innerHTML = args.tooltip.message;\n            hotSpotDiv.appendChild(span);\n        }\n\n        if(args.onClick) {\n            hotSpotDiv.addEventListener('click',args.onClick, false);\n        }\n        // span.innerHTML = args;\n        // hotSpotDiv.appendChild(span);\n        // // span.style.width = span.scrollWidth - 20 + 'px';\n        // // span.style.marginLeft = -(span.scrollWidth - hotSpotDiv.offsetWidth) / 2 + 'px';\n        // // span.style.marginTop = -span.scrollHeight - 12 + 'px';\n        // span.addEventListener('click', () => {\n        //     alert('Clicked')\n        // }, false);\n    }\n\n    // VARIABLES\n    const config = {\n        // autoRotate: -2,\n        autoLoad: true,\n        showZoomCtrl: false,\n        showFullscreenCtrl: false,\n        hotSpots:[\n            {\n                \"pitch\": 10,\n                \"yaw\": -45,\n                \"type\": \"info\",\n                \"text\": \"Baltimore Museum of Art\",\n                \"URL\": \"https://artbma.org/\"\n            },\n            {\n                \"pitch\": 14,\n                \"yaw\": 100,\n                \"cssClass\": \"custom-hotspot\",\n                \"createTooltipFunc\": hotspot,\n                \"createTooltipArgs\": {\n                    tooltip: {\n                        message: \"Custom Information\"\n                    }\n                }\n            },\n            {\n                \"pitch\": 70,\n                \"yaw\": 55,\n                \"cssClass\": \"custom-hotspot\",\n                \"createTooltipFunc\": hotspot,\n                \"createTooltipArgs\": {\n                    onClick: () => {\n                        alert('Action')\n                    }\n                }\n            }\n        ]\n    };\n\n\n\n    const style = {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        background: \"#000000\"\n    }\n\n    // HOOKS\n\n    // METHODS\n    const click = () => {\n        sphere.setPitch(30);\n    }\n\n    const test = () => {\n        console.log('test');\n    }\n\n    return (\n        <>\n                <ReactPannellum\n                    hotSpotDebug={true}\n                    id={id}\n                    sceneId={scene}\n                    imageSource={sphereImage}\n                    config={config}\n                    style={style}\n                    onPanoramaLoaded={test}\n                />\n                {/* <div onClick={click}>Click me</div> */}\n\n        </>\n    )\n}\n\nexport default ThreeSixtyImage;\n\n","import React from 'react';\nimport ThreeSixtyImage from '../components/360image';\n\ninterface Props {\n\n}\n\nconst ThreeSixtyImageContainer : React.FC<Props>  = () =>  {\n    // VARIABLES\n\n    // HOOKS\n\n    // METHODS\n    \n    return (\n        <>\n            <div>\n                <ThreeSixtyImage id=\"1\" scene=\"one\"></ThreeSixtyImage>\n                \n                <div className=\"eyeglass\">\n                    <div className=\"eyeglass__lens eyeglass__lens--left\"></div>\n                    <div className=\"eyeglass__lens eyeglass__lens--right\"></div>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default ThreeSixtyImageContainer;","import React, { useRef } from 'react';\n\ninterface Props {\n    source: string,\n    currentTime?: number,\n    autoPlay?: boolean,\n    loop?: boolean,\n    width?: string,\n    onTimeUpdate?: (data: {\n        currentTime: number,\n        duration: number\n    }) => void;\n}\n\nconst VideoPlayer : React.FC<Props>  = (\n    { \n        source, \n        currentTime = 0, \n        autoPlay = false, \n        loop = false,\n        onTimeUpdate,\n        width = 'inherit'\n    }) =>  {\n    // VARIABLES\n    const video = useRef<HTMLVideoElement>(null);\n    const style = {\n        width: width\n    };\n\n    // HOOKS\n    // React.useEffect(() => {\n    // }, []);\n\n    React.useEffect(() => {\n        if(video.current) {\n            video.current.currentTime = currentTime;\n\n            if(autoPlay) {\n                video.current.play();\n            }\n        }\n    }, [currentTime]);\n\n    \n\n    // METHODS\n    const timeUpdate = (e: any) => {\n        if (onTimeUpdate) {\n            onTimeUpdate({\n                currentTime: e.target.currentTime,\n                duration: e.target.duration\n            });\n        }\n    }\n\n    const onCanPlayThrough = () => {\n        // alert('onCanPlayThrough');\n    }\n\n    return (\n        <div className=\"video-player\">\n            <video \n                style={style}\n                onCanPlayThrough={onCanPlayThrough}\n                playsInline\n                onTimeUpdate={timeUpdate}\n                ref={video} autoPlay={autoPlay} loop={loop} className=\"video__standard\" muted>\n                <source src={source} type=\"video/mp4\"/> \n                Your browser does not support the video tag.\n            </video> \n\n        </div>\n    )\n}\n\nexport default VideoPlayer;","import React, { useRef, useState } from 'react';\nimport VideoPlayer from './components/video-player';\nimport './interactive.scss';\n// import VideoA from \"./../../components/videoA.mp4\";\n// import VideoB from \"./../../components/videoB.mp4\";\n\n\ninterface Props {\n\n}\n\nconst Interactive : React.FC<Props>  = () =>  {\n    // VARIABLES\n    const [videoType, setVideoType] = useState('standard');\n    const [finalWidth, setFinalWidth] = React.useState('');\n    const videoA = useRef<HTMLVideoElement>(null);\n    const videoB = useRef<HTMLVideoElement>(null);\n    const videoCompleteCount = useRef<number>(0);\n\n    const VideoA = 'videos/videoA.mp4';\n    const VideoB = 'videos/videoB.mp4';\n\n\n\n    // HOOKS\n    React.useEffect(() => {\n        setFinalWidth(getFinalWidth());\n\n        window.addEventListener('resize', () => {\n            setFinalWidth(getFinalWidth());\n        }, false);\n\n        // if (videoA.current) {\n        //     videoA.current.load();\n        // }\n\n        // if (videoB.current) {\n        //     videoB.current.load();\n        // }\n        // alert('Load');\n    }, [])\n\n    // METHODS\n    const toggleVideo = (video: 'boost' | 'standard') => {\n        setVideoType(video);\n    }\n\n    const getFinalWidth = () => {\n        const windowWidth = window.innerWidth - 50;\n        const width = window.innerWidth > 700 ? '700px' : `${windowWidth}px`;\n        return width;\n    }\n    \n\n    const controlButtonClassName = (video: 'boost' | 'standard') => {\n        let def = 'interactive__control-button';\n        if (videoType === video) {\n            def += ` ${def}--active`;\n        }        \n        return def;\n    }\n\n    // const onCanPlayThrough = () => {\n    //     videoCompleteCount.current += 1;\n    //     if (videoCompleteCount.current === 2) {\n    //         videoA.current?.play();\n    //         videoB.current?.play();\n    //     }\n    // }\n    \n\n    return (\n        <div className=\"interactive\">\n            <div className=\"interactive__control\">\n                <button className={controlButtonClassName('boost')} onClick={() => toggleVideo('boost')}>\n                    Eyezen Boost\n                </button>\n                <button className={controlButtonClassName('standard')} onClick={() => toggleVideo('standard')}>\n                    Standard\n                </button>\n            </div>\n            <div className=\"interactive__video-container\">\n                <label className=\"video-type\">{videoType}</label>\n                <VideoPlayer width={finalWidth} source={VideoA} autoPlay={true} loop={true}/>\n\n                {/* <div className=\"video-player\">\n                    <video \n                        style={{width: finalWidth}}\n                        onCanPlayThrough={onCanPlayThrough}\n                        playsInline\n                        ref={videoA} loop={true} className=\"video__standard\" muted>\n                        <source src={VideoA} type=\"video/mp4\"/> \n                        Your browser does not support the video tag.\n                    </video> \n                </div> */}\n                \n                <div className={'curtain curtain--' + videoType}>\n                    <VideoPlayer width={finalWidth} source={VideoB} autoPlay={true} loop={true}/>\n\n                    {/* <div className=\"video-player\">\n                        <video \n                            style={{width: finalWidth}}\n                            onCanPlayThrough={onCanPlayThrough}\n                            playsInline\n                            ref={videoB} loop={true} className=\"video__standard\" muted>\n                            <source src={VideoB} type=\"video/mp4\"/> \n                            Your browser does not support the video tag.\n                        </video> \n                    </div> */}\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Interactive;","import React, { ChangeEvent, useRef, useState } from 'react';\nimport VideoPlayer from '../interactive/components/video-player';\nimport './side-by-side.scss';\n// import VideoA from \"./../../components/videoA.mp4\";\n// import VideoB from \"./../../components/videoB.mp4\";\n\ninterface Props {\n\n}\n\nconst SideBySide : React.FC<Props>  = () =>  {\n    // VARIABLES\n    const slider = useRef<HTMLInputElement>(null);\n    const [videoTime, setVideoTime] = useState(0);\n    const videoA = useRef<HTMLVideoElement>(null);\n    const videoB = useRef<HTMLVideoElement>(null);\n    const videoCompleteCount = useRef<number>(0);\n    const VideoA = 'videos/videoA.mp4';\n    const VideoB = 'videos/videoB.mp4';\n\n\n    // HOOKS\n    React.useEffect(() => {\n\n        if(slider.current){\n            console.log(slider.current.value);\n\n            if (videoA.current) {\n                videoA.current.currentTime = Number(slider.current.value) / 100;\n            }\n\n            if (videoB.current) {\n                videoB.current.currentTime = Number(slider.current.value) / 100;\n            }\n        }\n    }, [videoTime]);\n\n    React.useEffect(() => {\n        if(slider.current){\n            slider.current.value = '0';\n        }\n        // if (videoA.current) {\n        //     videoA.current.load();\n        //     videoA.current?.play();\n        // }\n        // if (videoB.current) {\n        //     videoB.current.load();\n        //     videoA.current?.play();\n        // }\n    }, [])\n\n    // METHODS\n    const sliderOnChange = (event: ChangeEvent<HTMLInputElement>) => {\n        if(slider.current){\n            setVideoTime(Number(event.target.value) / 100);\n        }\n    }\n\n    const onTimeUpdate = (data: {\n        currentTime: number,\n        duration: number\n    }) => {\n        if(slider.current){\n            slider.current.value = String(data.currentTime * 100);\n        }\n    }\n\n    // METHODS\n    const timeUpdate = (e: any) => {\n        if (onTimeUpdate) {\n            onTimeUpdate({\n                currentTime: e.target.currentTime,\n                duration: e.target.duration\n            });\n        }\n    }\n\n    const onCanPlayThrough = () => {\n        videoCompleteCount.current += 1;\n\n        // if (videoCompleteCount.current === 2) {\n        //     videoA.current?.play();\n        //     videoB.current?.play();\n        // }\n    }\n\n    return (\n        <div className=\"side-by-side\">\n            <div className=\"side-by-side__videos\">\n                <div className=\"side-by-side__video-wrapper\">\n                    <label>Eyezen Boost</label>\n\n                    <VideoPlayer source={VideoA} currentTime={videoTime} \n                        autoPlay={true}\n                        loop={true}\n                        onTimeUpdate={(data) => onTimeUpdate(data)}\n                    />\n\n                    {/* <div className=\"video-player\">\n                        <video \n                            ref={videoA}\n                            onCanPlayThrough={onCanPlayThrough}\n                            playsInline\n                            autoPlay\n                            onTimeUpdate={timeUpdate}\n                            loop={true} className=\"video__standard\" muted>\n                            <source src={VideoA} type=\"video/mp4\"/> \n                            Your browser does not support the video tag.\n                        </video> \n                    </div> */}\n\n                </div>\n                <div className=\"side-by-side__video-wrapper\">\n                    <label>Standard</label>\n                    \n                    <VideoPlayer source={VideoB} currentTime={videoTime} \n                        autoPlay={true} \n                        loop={true}\n                    />\n\n                    {/* <div className=\"video-player\">\n                        <video \n                            ref={videoB}\n                            onCanPlayThrough={onCanPlayThrough}\n                            autoPlay\n                            playsInline\n                            loop={true} className=\"video__standard\" muted>\n                            <source src={VideoB} type=\"video/mp4\"/> \n                            Your browser does not support the video tag.\n                        </video> \n                    </div> */}\n\n                </div>\n            </div>\n\n            <div className=\"side-by-side__slider\">\n                <input \n                    onChange={sliderOnChange} \n                    ref={slider}\n                    type=\"range\" \n                    min=\"0\" max=\"1000\"\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default SideBySide;","export default __webpack_public_path__ + \"static/media/chromance_off.b864defc.png\";","export default __webpack_public_path__ + \"static/media/chromance_on.13a9b95a.png\";","export default __webpack_public_path__ + \"static/media/polar_off.c0152600.jpg\";","export default __webpack_public_path__ + \"static/media/polar_on.26c4914f.png\";","export default __webpack_public_path__ + \"static/media/lightblue_filter_off.7cd1fcdf.jpg\";","export default __webpack_public_path__ + \"static/media/lightblue_filter_on.97c50659.jpg\";","export default __webpack_public_path__ + \"static/media/evolve_off.3cf66cf2.jpg\";","export default __webpack_public_path__ + \"static/media/evolve_on.5af4aa16.mp4\";","import React, { useState } from 'react';\nimport './filter.scss';\nimport chromanceOff from './images/chromance_off.png';\nimport chromanceOn from './images/chromance_on.png';\nimport polarOff from './images/polar_off.jpg';\nimport polarOn from './images/polar_on.png';\nimport blueOff from './images/lightblue_filter_off.jpg';\nimport blueOn from './images/lightblue_filter_on.jpg';\nimport evolveOff from './images/evolve_off.jpg';\nimport evolveOn from './images/evolve_on.mp4';\nimport VideoPlayer from '../interactive/components/video-player';\n\n\n\ninterface Props {\n\n}\n\nconst Filter : React.FC<Props>  = () =>  {\n    // VARIABLES\n    const filters: any = {\n        chromance: {\n            off: chromanceOff,\n            on: chromanceOn,\n            type: 'image'\n        },\n        polarized: {\n            off: polarOff,\n            on: polarOn,\n            type: 'image'         \n        },\n        evolve: {\n            off: evolveOff,\n            on: evolveOn,\n            type: 'video'         \n        },\n        blueLightFilter: {\n            off: blueOff,\n            on: blueOn,\n            type: 'image'\n        }\n    }\n    const [activeFilter, setActiveFilter] = useState(filters.chromance);\n    const [filterOpacity, setFilterOpacity] = useState(1);\n    const [filterTimeout, setFilterTimeout] = useState<any>();\n    // HOOKS\n\n    // METHODS\n    const onSelectFilter = (e: any) => {\n        setActiveFilter(filters[e.target.value]);\n    }\n\n    const mouseEvent = (event: 'up' | 'down') => {\n        if(event === 'down') {\n            let opacity = 10;\n            const timeout = setInterval(() => {\n                if(opacity <= 0) {\n                    clearTimeout(filterTimeout);\n                    return;\n                }\n                opacity -= 1;\n                setFilterOpacity(opacity / 10);                \n            }, 100);\n            setFilterTimeout(timeout);\n        } else {\n            clearTimeout(filterTimeout);\n            setFilterOpacity(1);\n        }\n    }\n\n\n    return (\n        <div className=\"filter\" onMouseUp={() => mouseEvent('up')}>\n            \n            {filterOpacity}\n            <select onChange={onSelectFilter}>\n                <option value=\"chromance\">Chromance</option>\n                <option value=\"polarized\">Polarized</option>\n                <option value=\"evolve\">Evolve</option>\n                <option value=\"blueLightFilter\">Blue Light Filter</option>\n            </select>\n\n            <div className=\"filter__container\">\n\n                \n                {   activeFilter.type === 'image' &&\n                    <img src={activeFilter.on} alt=\"\" className=\"filter-on\"/>\n                }\n\n                {   activeFilter.type === 'video' &&\n                    <VideoPlayer source={activeFilter.on}\n                        autoPlay={true}\n                        loop={true}\n                    />\n                }\n\n                <img \n                    className=\"filter-off\"\n                    src={activeFilter.off} alt=\"\" style={{\n                    opacity: filterOpacity\n                }}/>\n\n\n                <div className=\"filter__trigger\">\n                    <button      \n                        style={{\n                            opacity: filterOpacity\n                        }}                   \n                        // onTouchEnd={() => mouseEvent('up')} onTouchStart={() => mouseEvent('down')}                        \n                        onMouseDown={() => mouseEvent('down')}>\n                        Click & Hold to see the effects\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Filter;","import React from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, NavLink, Route, Switch } from \"react-router-dom\";\nimport ThreeSixtyImageContainer from './pages/360imageContainer';\nimport Interactive from './pages/interactive/interactive';\nimport SideBySide from './pages/sidebyside/side-by-side';\nimport Filter from './pages/filter/Filter';\n\nfunction App() {\n\n  return (\n    <>\n      <Router>\t\n\n        <ul className=\"navigation\">\n          <li>\n            <NavLink activeClassName='is-active' exact={true} to=\"/\">360 Image</NavLink>\n          </li>\n          <li>\n            <NavLink activeClassName='is-active'  to=\"/sidebyside\">Side by Side</NavLink>\n          </li>\n          <li>\n            <NavLink activeClassName='is-active'  to=\"/interactive\">Interactive</NavLink>\n          </li>\n          <li>\n            <NavLink activeClassName='is-active'  to=\"/filter\">Filter</NavLink>\n          </li>\n        </ul>\n\n        \n        <Switch>\t\n          <Route path=\"/360\" exact component={ThreeSixtyImageContainer}/>\t          \n          <Route path=\"/sidebyside\" exact component={SideBySide}/>\t          \n          <Route path=\"/interactive\" exact component={Interactive}/>\t  \n          <Route path=\"/filter\" exact component={Filter}/>\t\n          <Route path=\"/\" component={ThreeSixtyImageContainer}/>\t                  \n        </Switch>\t\n\n      </Router>\t\n    </>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}